expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
#choose number of points
h <- 40
#simulate
lhs <- maximinLHS(h,3)
#minimum and maximum values for each parameter
threshold.min <- 0.02
threshold.max <- 0.07
expansion.min <- 2
expansion.max <- 10
inflation.min <- 2
inflation.max <- 10
# generate a “parameter set” by rescaling our simulated latin hypercube sample
params.set <- cbind(
threshold = lhs[ ,1] * (threshold.max-threshold.min) + threshold.min,
expansion = lhs[ ,2] * (expansion.max-expansion.min) + expansion.min,
inflation = lhs[ ,3]*(inflation.max-inflation.min) + inflation.min
)
min(params.set[,1])
setwd("MountainPlot/")
ls
devtools::load_all()
devtools::load_all()
ls
devtools::run_examples()
system("inst/pplacer -h")
devtools::run_examples()
testthat::test_local()
seq.info.ex
seq.info <- pull.headers(alignment.ex, var.names = c("ID", "CollectionDate", "Subtype"),
var.transformations =list(as.character, as.Date, as.factor))
seq.info
seq.info
alignment.ex
str(alignment.ex)
alignment.ex
cluster.ex
devtools::load_all()
generate.all()
devtools::load_all()
cluster.ex
devtools::load_all()
cluster.ex
generate.all()
cluster.ex
load("data/cluster.ex")
load("data/cluster.ex.RData")
cluster.ex
cluster.ex <- component.cluster.set <- component.cluster(graph.ex, dist.thresh = 0.03)
save(cluster.ex, file="data/cluster.ex.RData")
devtools::load_all()
cluster.ex
cluster.ex
cluster.ex <- component.cluster.set <- component.cluster(graph.ex, dist.thresh = 0.06)
save(cluster.ex, file="data/cluster.ex.RData")
devtools::load_all()
cluster.ex
cluster.ex
cluster.ex <- component.cluster.set <- component.cluster(graph.ex, dist.thresh = 0.05)
save(cluster.ex, file="data/cluster.ex.RData")
devtools::load_all()
cluster.ex
cluster.ex
cluster.ex <- component.cluster.set <- component.cluster(graph.ex, dist.thresh = 0.055)
cluster.ex
cluster.ex
save(cluster.ex, file="data/cluster.ex.RData")
cluster.ex$Subtype
graph.ex\
graph.ex
