% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.setup.R
\name{create.graph}
\alias{create.graph}
\title{Makes a graph object based on sequence data and pairwise comparisons}
\usage{
create.graph(
  seq.info = data.table(),
  edge.info,
  which.new = numeric(0),
  growth.resolution = minimum.retrospective.edge
)
}
\arguments{
\item{seq.info:}{A set of sequence meta-data coupled to alignment header}

\item{edge.info:}{A pairwise edge matrix of all associated headers in seq.info}

\item{which.new:}{Which sequences in seq.info are "new". this is a list of indices.}

\item{growth.resolution:}{The method by which growth is resolved. This ensures
new cases don't merge clusters. By default, each new sequence joins a cluster
by only it's minimum retrospective edge.}
}
\value{
A graph, with sequences and edge info, as well as a growth resolution.
See graph.ex for a more detailed example with annotated data.
}
\description{
Create an implementation of a graph. This is a list, consisting of a distance
matrix and some sequence meta data (seq.info). Any new sequences are resolved
as growth ensuring that new sequences are added prospectively without merging
clusters. Clusters containing purely new sequences are also ignored for this
purpose. At this point, new sequences only connect to the closest non-new
neighbour (although other options for growth resolutions may exist and be
implemented).
}
\examples{
edge.info <- ape::dist.dna(alignment.ex, pairwise.deletion = T, as.matrix = T, model = "TN93", )

new.year <- max(seq.info.ex$CollectionDate) - 365
which.new <- which(seq.info.ex$CollectionDate > new.year)
g <- create.graph(seq.info.ex, edge.info, which.new)

component.cluster(g)
}
